@using Microsoft.AspNetCore.Components.Web
@namespace AprilCraft.Web.Static.Pages
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    <meta property="og:image"
          content="/assets/images/logo/made_1.png" />

    <title>AprilCraft - Creative Design Agency</title>
    <meta name="description" content="AprilCraft is a design agency specializing in creative visual content for branding, media posters, flyers, banners and more. Discover our portfolio and services." />
    <meta name="keywords" content="Design, Creative, Visual Content, AprilCraft, Gallery" />
    <meta name="author" content="Alain Kimbu" />

    <!-- Open Graph / Facebook -->
    <meta property="og:title" content="AprilCraft - Creative Design Agency" />
    <meta property="og:description" content="AprilCraft is a design agency specializing in creative visual content for branding, media posters, flyers, banners and more. Discover our portfolio and services."  />
    <meta property="og:image" content="/assets/images/logo/made_1.png" />
    <!--meta property="og:url" content="https://www.aprilcraft.com" /-->
    <meta property="og:type" content="website" />

    <!-- Twitter -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content="AprilCraft - Creative Design Agency" />
    <meta name="twitter:description" content="AprilCraft is a design agency specializing in creative visual content for branding, media posters, flyers, banners and more. Discover our portfolio and services."  />
    <meta name="twitter:image" content="/images/logo.png" />

    <!-- WhatsApp, Telegram -->
    <meta property="og:site_name" content="AprilCraft" />

    <base href="~/" />
    <link rel="stylesheet" href="css/bootstrap/bootstrap.min.css" />
    <link rel="stylesheet" href="~/assets/vendors/tailwind/font.awesome.css">
    <!-- <link rel="stylesheet" href="assets/vendors/tailwind/tailwind.elements.min.css"> -->
    <link rel="stylesheet" href="~/assets/vendors/tailwind/tailwindcss.css">
    <link href="css/site.css" rel="stylesheet" />
    <link href="css/index.css" rel="stylesheet" />
    <link href="AprilCraft.Web.Static.styles.css" rel="stylesheet" />

    <script src="~/assets/vendors/jquery-3.6.0.min.js"></script>
    <script src="~/assets/vendors/tailwind/tailwindcss.js" deffer></script>
    <component type="typeof(HeadOutlet)" render-mode="ServerPrerendered" />
</head>
<body>
    @RenderBody()

    <div id="blazor-error-ui">
        <environment include="Staging,Production">
            An error has occurred. This application may no longer respond until reloaded.
        </environment>
        <environment include="Development">
            An unhandled exception has occurred. See browser dev tools for details.
        </environment>
        <a href="" class="reload">Reload</a>
        <a class="dismiss">🗙</a>
    </div>
    <script defer>
        App = {};

        App.LoadScript = (function (Url, Instance, CallBack) {
            var head = document.head;
            var IsExist = false;
            var Scripts = head.getElementsByTagName('script');
            for (var i = Scripts.length; i--;) {
                var Src = Scripts[i];
                if (Src.src == Url || Src.src.replace(Src.baseURI, '') == Url) {
                    IsExist = true;
                    break;
                }
            }
            if (!IsExist) {
                var script = document.createElement('script');
                script.type = 'text/javascript';
                script.src = Url;
                if (CallBack && Instance) {
                    script.onload = setTimeout(() => { App.CsharpInvoker(Instance, CallBack); }, 3000);
                }
                else if (CallBack)
                    script.onload = setTimeout(() => { CallBack(); }, 1000);

                head.appendChild(script);
            }
            else if (CallBack && Instance)
                setTimeout(() => { App.CsharpInvoker(Instance, CallBack); }, 1000);
            else if (CallBack)
                setTimeout(() => { CallBack(); }, 1000);
        });

        App.CsharpInvoker = (function CSharpCallBackInvoker(Instance, MethodName, Parameter) {
            Instance.invokeMethodAsync(MethodName, Parameter);
        });

        App.IsReady = true

        function getReadiness() {
            return App.IsReady;
        }

    </script>

    <script src="_framework/blazor.server.js"></script>
    <script src="~/js/index.js"></script>@*
    <script src="~/assets/vendors/masonry.pkgd.min.js"></script>*@
</body>
</html>
