@page "/"
@inject Images images;
@inject IJSRuntime jsRuntime;
@using AprilCraft.Web.Static.Data;


<main class="main flex flex-col pt-0">

	<div class="main-bg-bg min-h-[100vh] min-w-[100vw]">
    </div>
    <div class="main-bg min-h-[100vh] min-w-[100vw]">
	</div>
    <div class="landing h-[100vh] w-[100%] flex flex-col items-center justify-center " >
		<div class="box flex flex-row items-center justify-center w-[100%]">
			<!-- <a class="previous mr-auto ml-4" onclick="plusSlides(-1)"> -->
			<button class="previous mr-auto ml-4 h-14 w-14 hover:bg-[rgba(255, 255, 255, 0.3)]">
				<svg class="h-[100%] w-[100%] text-white" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
					<path class="l-r-btn" d="M11 15L8 12M8 12L11 9M8 12L16 12M3 12C3 7.02944 7.02944 3 12 3C16.9706 3 21 7.02944 21 12C21 16.9706 16.9706 21 12 21C7.02944 21 3 16.9706 3 12Z" stroke="#000000" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
				</svg>
			</button>
			<!-- </a> -->



			<div class="contents text-center w-[max-content] text-white" style="text-shadow: rgb(58, 58, 58) 1px 0 10px;">
				<div class="content">
					<h1 class="craft-name text-5xl sm:text-8xl drop-shadow-md ksh">AprilCraft</h1>
					<p class="text-lg my-3 sm:my-4 nr font-[500]">Crafting your ideas into visuals</p>
				</div>
			</div>

			<!-- <a class="next mr-4 ml-auto" onclick="plusSlides(1)"> -->
			<button class="next mr-4 ml-auto h-14 w-14 hover:bg-[rgba(255, 255, 255, 0.3)]">
				<svg class="h-[100%] w-[100%] text-white" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
					<path class="l-r-btn" d="M13 9L16 12M16 12L13 15M16 12L8 12M21 12C21 16.9706 16.9706 21 12 21C7.02944 21 3 16.9706 3 12C3 7.02944 7.02944 3 12 3C16.9706 3 21 7.02944 21 12Z" stroke="#000000" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
				</svg>
			</button>
			<!-- </a> -->
		</div>
		<div class="dots" style="text-align:center">
			<span class="dot active" id="0"></span>
			<span class="dot" id="1"></span>
			<span class="dot" id="2"></span>
			<span class="dot" id="3"></span>
			<span class="dot" id="4"></span>
			<span class="dot" id="5"></span>
			<span class="dot" id="6"></span>
			<span class="dot" id="7"></span>
			<span class="dot" id="8"></span>
			<span class="dot" id="9"></span>
			<span class="dot" id="10"></span>
			<span class="dot" id="11"></span>
		</div>
	</div>
	<div class="galler-view min-h-[100vh] min-w-[100vw]">
		<div class="first-header">
			<h1 class="craft-name hidden ksh">AprilCraft</h1>
			<span class="craft-caption ksh text-3xl sm:text-5xl drop-shadow-md font-bold">Our Design Gallery</span>
		</div>
		<div class="craft-list">

			@foreach (var item in ListSmall!)
			{
				<div class="craft border rounded-md hover:drop-shadow-xl" id="craft_@IncrementCounter1()">
					<img class="craft-img" src="assets/images/thumbnails/@item" loading="lazy" style="background-image: none;">
					<span class="craft-text rounded truncate nr">@item</span>
				</div>
			}

		</div>
	</div>
</main>

<div class="g-main min-h-[100vh] max-h-[100vh] w-full flex-col bg-black">
	<div class="g-header flex w-full h-10 shadow-lg border-b justify-start items-center pl-2">
		<h1 class="hd text-2xl font-bold text-slate-200">Gallery</h1>
		<button class="exit h-7 w-7 flex justify-center items-center text-2xl text-center text-white ml-auto mr-1">
			<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor"
				 class="w-6 h-6">
				<path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12" />
			</svg>
		</button>
	</div>
	<div class="view-box flex justify-center items-center w-full h-auto bg-[#707070] my-auto">
	</div>
	<div class="img-list thumb-list min-h-[100%] w-full flex flex-row flex-nowrap gap-[2px] overflow border">
		@foreach (var item in ListSmall)
		{
			<a class="thumbnail h-[85px] max-h-[85px] min-w-[100px] bg-white" id="thumb_@IncrementCounter2()">
				<img src="assets/images/thumbnails/@item" alt="" class="thumb ">
				
			</a>
		}
	</div>
</div>

@code {
	private List<string>? ListLarge;
	private List<string>? ListSmall;
	private int Counter1;
	private int Counter2;

	protected override void OnInitialized()
	{
		ListLarge = images.DesignsLarge;
		ListSmall = images.DesignsSmall;
		Counter1 = 0;
		Counter2 = 0;
	}

	protected override async Task OnAfterRenderAsync(bool firstRender)
	{
		await jsRuntime.InvokeVoidAsync("displayCrafts");
		await jsRuntime.InvokeVoidAsync("init", ListLarge);
	}
	private int IncrementCounter1()
	{
		return Counter1++;
	}
	private int IncrementCounter2()
	{
		return Counter2++;
	}
}
